{"version":3,"sources":["components/Navbar.js","images/trash.svg","url.js","components/Polls.js","pages/home.jsx","pages/register.jsx","pages/login.jsx","index.js"],"names":["Navbar","state","username","loggedIn","localStorage","getItem","handleLogout","bind","this","setState","removeItem","to","onClick","React","Component","url","Polls","pollList","fetchPollList","updatePoll","pollVote","createPoll","deletePoll","fetch","then","response","json","data","e","preventDefault","index","ReactDOM","findDOMNode","target","parentNode","getAttribute","poll","userId","parseInt","name","push","method","headers","body","JSON","stringify","polls","classList","add","querySelectorAll","forEach","button","disabled","querySelector","value","reset","splice","className","onSubmit","id","style","flex","type","required","placeholder","map","user","includes","indexOf","src","trash","alt","Home","Register","password","redirect","error","handleSubmit","handleChange","token","setItem","jwt_decode","onChange","Login","loggedin","render","StrictMode","exact","path","component","document","getElementById"],"mappings":"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","file":"static/js/main.778cdc59.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass Navbar extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            username: null,\r\n            loggedIn: localStorage.getItem('token') ? true : false,\r\n        }\r\n        this.handleLogout = this.handleLogout.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.state.loggedIn) {\r\n            this.setState({ username: localStorage.getItem('user') })\r\n        }\r\n    }\r\n\r\n    handleLogout() {\r\n        localStorage.removeItem('token')\r\n        localStorage.removeItem('user')\r\n        localStorage.removeItem('userId')\r\n        this.setState({\r\n            loggedIn: false,\r\n            username: null,\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const username = this.state.username\r\n        return (\r\n            <nav>\r\n                <Link to=\"/\">Home</Link>\r\n                {username ?\r\n                    <ul>\r\n                        <li>{username}</li>\r\n                        <li onClick={this.handleLogout}><Link>Log out</Link></li>\r\n                    </ul>\r\n                    :\r\n\r\n                    <ul>\r\n                        <li><Link to=\"/register\">Register</Link></li>\r\n                        <li><Link to=\"/login\">Log in</Link></li>\r\n                    </ul>\r\n                }\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navbar","export default __webpack_public_path__ + \"static/media/trash.f1497a79.svg\";","const url = 'pollapp4.herokuapp.com'\r\n\r\nexport { url }","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport trash from '../images/trash.svg'\r\nimport { url } from '../url'\r\n\r\nclass Polls extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            pollList: null,\r\n        }\r\n        this.fetchPollList = this.fetchPollList.bind(this)\r\n        this.updatePoll = this.updatePoll.bind(this)\r\n        this.pollVote = this.pollVote.bind(this)\r\n        this.createPoll = this.createPoll.bind(this)\r\n        this.deletePoll = this.deletePoll.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchPollList()\r\n    }\r\n\r\n    fetchPollList() {\r\n        fetch(url + '/api/poll-list/')\r\n            .then(response => response.json())\r\n            .then(data =>\r\n                this.setState({ pollList: data }))\r\n    }\r\n\r\n    updatePoll(e) {\r\n        e.preventDefault()\r\n        const index = ReactDOM.findDOMNode(e.target).parentNode.parentNode.getAttribute(\"id\")\r\n        let poll = this.state.pollList[index]\r\n        const userId = parseInt(localStorage.getItem('userId'))\r\n        poll[e.target.name] = poll[e.target.name] + 1\r\n        poll[\"votes\"].push(userId)\r\n        if (e.target.name === 'option1total') {\r\n            poll[\"option1votes\"].push(userId)\r\n        } else {\r\n            poll[\"option2votes\"].push(userId)\r\n        }\r\n        fetch(url + `/api/update/${poll[\"id\"]}/`, {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(poll)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                let polls = [...this.state.pollList]\r\n                polls[index] = data\r\n                this.setState({\r\n                    pollList: polls,\r\n                })\r\n            })\r\n    }\r\n\r\n    pollVote(e) {\r\n        this.updatePoll(e)\r\n        e.target.classList.add(\"active\")\r\n        ReactDOM.findDOMNode(e.target).parentNode.parentNode.classList.add(\"voted\")\r\n        const buttons = ReactDOM.findDOMNode(e.target).parentNode.querySelectorAll('button')\r\n        buttons.forEach(button => button.disabled = true)\r\n    }\r\n\r\n    createPoll(e) {\r\n        e.preventDefault()\r\n        fetch(url + '/api/create-poll/', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n                \"title\": e.target.querySelector(\"#form-title\").value,\r\n                \"option1\": e.target.querySelector(\"#form-option1\").value,\r\n                \"option2\": e.target.querySelector(\"#form-option2\").value,\r\n                \"owner\": localStorage.getItem('user')\r\n            })\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                this.setState({\r\n                    pollList: [...this.state.pollList, data]\r\n                })\r\n            })\r\n        e.target.reset()\r\n    }\r\n\r\n    deletePoll(e) {\r\n        e.preventDefault()\r\n        const index = ReactDOM.findDOMNode(e.target).parentNode.getAttribute(\"id\")\r\n        let poll = this.state.pollList[index]\r\n        fetch(url + `/api/delete-poll/${poll[\"id\"]}/`, {\r\n            method: 'DELETE'\r\n        })\r\n        let polls = [...this.state.pollList]\r\n        polls.splice(index, 1)\r\n        this.setState({\r\n            pollList: polls\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const pollList = this.state.pollList\r\n        try {\r\n            return (\r\n                <div>\r\n                    {localStorage.getItem('token') ?\r\n                        <div className=\"poll-create\">\r\n                            <h1>Create a poll: </h1>\r\n                            <form onSubmit={this.createPoll} id=\"poll-form\">\r\n                                <input style={{ flex: 3 }} type=\"text\" id=\"form-title\" required placeholder=\"Title\" />\r\n                                <input style={{ flex: 3 }} type=\"text\" id=\"form-option1\" required placeholder=\"Option 1\" />\r\n                                <input style={{ flex: 3 }} type=\"text\" id=\"form-option2\" required placeholder=\"Option 2\" />\r\n                                <input style={{ flex: 1 }} type=\"submit\" id=\"form-submit\" placeholder=\"Submit\" />\r\n                            </form>\r\n                        </div>\r\n                        :\r\n                        <div className=\"login-statement\">\r\n                            <h1>Log in to vote and create polls</h1>\r\n                        </div>\r\n                    }\r\n                    <div className=\"polls\">\r\n                        {pollList.map(poll => {\r\n                            const userId = parseInt(localStorage.getItem('userId'))\r\n                            const user = localStorage.getItem('user')\r\n                            return (\r\n                                <div className={`poll ${poll[\"votes\"].includes(userId) ? \"voted\" : \"\"} ${poll[\"owner\"] === user ? \"owned\" : \"\"}`} id={pollList.indexOf(poll)}>\r\n                                    <h1 className=\"poll-title\">{poll[\"title\"]}</h1>\r\n                                    {poll[\"owner\"] === user &&\r\n                                        <img src={trash} alt=\"trash\" className=\"trash-icon\" onClick={this.deletePoll} />\r\n                                    }\r\n                                    <div className=\"poll-options\">\r\n                                        <button onClick={this.pollVote} name=\"option1total\" className={`poll-button ${poll[\"option1votes\"].includes(userId) ? \"active\" : \"\"}`} disabled={!localStorage.getItem('token') || poll[\"votes\"].includes(userId)}>{poll[\"option1\"]}</button>\r\n                                        <button onClick={this.pollVote} name=\"option2total\" className={`poll-button ${poll[\"option2votes\"].includes(userId) ? \"active\" : \"\"}`} disabled={!localStorage.getItem('token') || poll[\"votes\"].includes(userId)}>{poll[\"option2\"]}</button>\r\n                                    </div>\r\n                                    <div className=\"poll-results\">\r\n                                        <p>Total votes: </p>\r\n                                        <div className=\"votes-container\">\r\n                                            <div className=\"votes\">\r\n                                                <p>{poll[\"option1total\"]}</p>\r\n                                                <p>{poll[\"option2total\"]}</p>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                </div >\r\n            )\r\n        } catch {\r\n            return <h1>Loading...</h1>\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Polls;\r\n","import React from 'react'\r\nimport Navbar from '../components/Navbar'\r\nimport Polls from '../components/Polls'\r\n\r\nfunction Home() {\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            <Polls />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home","import React from 'react'\r\nimport Navbar from '../components/Navbar'\r\nimport { Redirect } from 'react-router-dom'\r\nimport jwt_decode from 'jwt-decode'\r\nimport { url } from '../url'\r\n\r\nclass Register extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            username: null,\r\n            password: null,\r\n            redirect: false,\r\n            error: false,\r\n        }\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault()\r\n        fetch(url + '/api/users/', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n                \"username\": this.state.username,\r\n                \"password\": this.state.password,\r\n            })\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if (data.token) {\r\n                    localStorage.setItem('token', data.token)\r\n                    localStorage.setItem('user', jwt_decode(data.token)[\"username\"])\r\n                    fetch(url + '/api/user_id/', {\r\n                        method: 'POST',\r\n                        headers: { 'Content-Type': 'application/json' },\r\n                        body: JSON.stringify({ \"username\": localStorage.getItem('user') })\r\n                    })\r\n                        .then(response => response.json())\r\n                        .then(data => localStorage.setItem('userId', data))\r\n                    this.setState({ redirect: true })\r\n                } else {\r\n                    this.setState({ error: true })\r\n                }\r\n            })\r\n    }\r\n\r\n    handleChange(e) {\r\n        e.preventDefault()\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.redirect) {\r\n            return <Redirect to='/' />\r\n        } else {\r\n            return (\r\n                <div>\r\n                    <Navbar />\r\n                    <div className=\"register-container\">\r\n                        <h1>REGISTER</h1>\r\n                        {this.state.error &&\r\n                            <h2 className=\"register-error\">Username already exists!</h2>\r\n                        }\r\n                        <div className=\"form-container\">\r\n                            <form onSubmit={this.handleSubmit} className=\"register-form\">\r\n                                <input type=\"text\" name=\"username\" onChange={this.handleChange} placeholder=\"Username\" />\r\n                                <input type=\"password\" name=\"password\" onChange={this.handleChange} placeholder=\"Password\" />\r\n                                <div className=\"register-form-submit\">\r\n                                    <input type=\"submit\" value=\"REGISTER\" />\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default Register","import React from 'react'\r\nimport Navbar from '../components/Navbar'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { url } from '../url'\r\n\r\nclass Login extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            username: null,\r\n            password: null,\r\n            loggedin: false,\r\n            error: false,\r\n        }\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault()\r\n        fetch(url + '/api/token-auth/', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n                \"username\": this.state.username,\r\n                \"password\": this.state.password,\r\n            })\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                try {\r\n                    if (data.user.username) {\r\n                        localStorage.setItem('token', data.token)\r\n                        localStorage.setItem('user', data.user.username)\r\n                        fetch(url + '/api/user_id/', {\r\n                            method: 'POST',\r\n                            headers: { 'Content-Type': 'application/json' },\r\n                            body: JSON.stringify({ \"username\": localStorage.getItem('user') })\r\n                        })\r\n                            .then(response => response.json())\r\n                            .then(data => {\r\n                                localStorage.setItem('userId', data)\r\n                            })\r\n                        this.setState({ loggedin: true })\r\n                    }\r\n                } catch {\r\n                    this.setState({ error: true })\r\n                }\r\n            })\r\n    }\r\n\r\n    handleChange(e) {\r\n        e.preventDefault()\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.loggedin) {\r\n            return <Redirect to='/' />\r\n        } else {\r\n            return (\r\n                <div>\r\n                    <Navbar />\r\n                    <div className=\"register-container\">\r\n                        <h1>LOG IN</h1>\r\n                        {this.state.error &&\r\n                            <h2 className=\"register-error\">Username already exists!</h2>\r\n                        }\r\n                        <div className=\"form-container\">\r\n                            <form onSubmit={this.handleSubmit} className=\"register-form\">\r\n                                <input type=\"text\" name=\"username\" onChange={this.handleChange} placeholder=\"Username\" />\r\n                                <input type=\"password\" name=\"password\" onChange={this.handleChange} placeholder=\"Password\" />\r\n                                <div className=\"register-form-submit\">\r\n                                    <input type=\"submit\" value=\"LOG IN\" />\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default Login","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './css/polls.css'\nimport './css/navbar.css'\nimport './css/register.css'\nimport {\n  BrowserRouter,\n  Route,\n  Switch,\n  Redirect\n} from \"react-router-dom\"\nimport Home from './pages/home'\nimport Register from './pages/register'\nimport Login from './pages/login'\n\nconst loggedIn = localStorage.getItem('token') ? true : false\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/register\" component={Register}>\n          {loggedIn && <Redirect to=\"/\" />}\n        </Route>\n        <Route exact path=\"/login\" component={Login}>\n          {loggedIn && <Redirect to=\"/\" />}\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}