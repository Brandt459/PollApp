{"version":3,"sources":["components/Navbar.js","images/trash.svg","components/Polls.js","pages/home.jsx","pages/register.jsx","pages/login.jsx","index.js"],"names":["Navbar","state","username","loggedIn","localStorage","getItem","handleLogout","bind","this","setState","removeItem","to","onClick","React","Component","Polls","pollList","fetchPollList","updatePoll","pollVote","createPoll","deletePoll","fetch","then","response","json","data","e","preventDefault","index","ReactDOM","findDOMNode","target","parentNode","getAttribute","poll","userId","parseInt","name","push","method","headers","body","JSON","stringify","polls","formError","classList","add","querySelectorAll","forEach","button","disabled","title","querySelector","value","option1","option2","reset","splice","className","onSubmit","id","style","flex","type","placeholder","map","user","includes","indexOf","src","trash","alt","Home","Register","password","redirect","error","handleSubmit","handleChange","token","setItem","jwt_decode","onChange","Login","loggedin","render","StrictMode","exact","path","component","document","getElementById"],"mappings":"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","file":"static/js/main.2e4fc266.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass Navbar extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            username: null,\r\n            loggedIn: localStorage.getItem('token') ? true : false,\r\n        }\r\n        this.handleLogout = this.handleLogout.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.state.loggedIn) {\r\n            this.setState({ username: localStorage.getItem('user') })\r\n        }\r\n    }\r\n\r\n    handleLogout() {\r\n        localStorage.removeItem('token')\r\n        localStorage.removeItem('user')\r\n        localStorage.removeItem('userId')\r\n        this.setState({\r\n            loggedIn: false,\r\n            username: null,\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const username = this.state.username\r\n        return (\r\n            <nav>\r\n                <Link to=\"/\">Home</Link>\r\n                {username ?\r\n                    <ul>\r\n                        <li>{username}</li>\r\n                        <li onClick={this.handleLogout}><Link>Log out</Link></li>\r\n                    </ul>\r\n                    :\r\n\r\n                    <ul>\r\n                        <li><Link to=\"/register\">Register</Link></li>\r\n                        <li><Link to=\"/login\">Log in</Link></li>\r\n                    </ul>\r\n                }\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navbar","export default __webpack_public_path__ + \"static/media/trash.f1497a79.svg\";","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport trash from '../images/trash.svg'\r\n\r\nclass Polls extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            pollList: null,\r\n        }\r\n        this.fetchPollList = this.fetchPollList.bind(this)\r\n        this.updatePoll = this.updatePoll.bind(this)\r\n        this.pollVote = this.pollVote.bind(this)\r\n        this.createPoll = this.createPoll.bind(this)\r\n        this.deletePoll = this.deletePoll.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchPollList()\r\n    }\r\n\r\n    fetchPollList() {\r\n        fetch('http://127.0.0.1:8000/api/poll-list/')\r\n            .then(response => response.json())\r\n            .then(data =>\r\n                this.setState({ pollList: data }))\r\n    }\r\n\r\n    updatePoll(e) {\r\n        e.preventDefault()\r\n        const index = ReactDOM.findDOMNode(e.target).parentNode.parentNode.getAttribute(\"id\")\r\n        let poll = this.state.pollList[index]\r\n        const userId = parseInt(localStorage.getItem('userId'))\r\n        poll[e.target.name] = poll[e.target.name] + 1\r\n        poll[\"votes\"].push(userId)\r\n        if (e.target.name === 'option1total') {\r\n            poll[\"option1votes\"].push(userId)\r\n        } else {\r\n            poll[\"option2votes\"].push(userId)\r\n        }\r\n        fetch(`http://127.0.0.1:8000/api/update/${poll[\"id\"]}/`, {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(poll)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                let polls = [...this.state.pollList]\r\n                polls[index] = data\r\n                this.setState({\r\n                    pollList: polls,\r\n                    formError: false,\r\n                })\r\n            })\r\n    }\r\n\r\n    pollVote(e) {\r\n        this.updatePoll(e)\r\n        e.target.classList.add(\"active\")\r\n        ReactDOM.findDOMNode(e.target).parentNode.parentNode.classList.add(\"voted\")\r\n        const buttons = ReactDOM.findDOMNode(e.target).parentNode.querySelectorAll('button')\r\n        buttons.forEach(button => button.disabled = true)\r\n    }\r\n\r\n    createPoll(e) {\r\n        e.preventDefault()\r\n        const title = e.target.querySelector(\"#form-title\").value\r\n        const option1 = e.target.querySelector(\"#form-option1\").value\r\n        const option2 = e.target.querySelector(\"#form-option2\").value\r\n        this.setState({ formError: false })\r\n        if (title && option1 && option2) {\r\n            fetch('http://127.0.0.1:8000/api/create-poll/', {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    \"title\": title,\r\n                    \"option1\": option1,\r\n                    \"option2\": option2,\r\n                    \"owner\": localStorage.getItem('user')\r\n                })\r\n            })\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    this.setState({\r\n                        pollList: [...this.state.pollList, data]\r\n                    })\r\n                })\r\n        } else {\r\n            this.setState({ formError: true })\r\n        }\r\n        e.target.reset()\r\n    }\r\n\r\n    deletePoll(e) {\r\n        e.preventDefault()\r\n        const index = ReactDOM.findDOMNode(e.target).parentNode.getAttribute(\"id\")\r\n        let poll = this.state.pollList[index]\r\n        fetch(`http://127.0.0.1:8000/api/delete-poll/${poll[\"id\"]}/`, {\r\n            method: 'DELETE'\r\n        })\r\n        let polls = [...this.state.pollList]\r\n        polls.splice(index, 1)\r\n        this.setState({\r\n            pollList: polls\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const pollList = this.state.pollList\r\n        try {\r\n            return (\r\n                <div>\r\n                    {localStorage.getItem('token') ?\r\n                        this.state.formError ?\r\n                            <div className=\"poll-create\">\r\n                                <h1 className=\"form-error\">Invalid form, please fill all fields</h1>\r\n                                <h1>Create a poll: </h1>\r\n                                <form onSubmit={this.createPoll} id=\"poll-form\">\r\n                                    <input style={{ flex: 3 }} type=\"text\" id=\"form-title\" placeholder=\"Title\" />\r\n                                    <input style={{ flex: 3 }} type=\"text\" id=\"form-option1\" placeholder=\"Option 1\" />\r\n                                    <input style={{ flex: 3 }} type=\"text\" id=\"form-option2\" placeholder=\"Option 2\" />\r\n                                    <input style={{ flex: 1 }} type=\"submit\" id=\"form-submit\" placeholder=\"Submit\" />\r\n                                </form>\r\n                            </div>\r\n                            :\r\n                            <div className=\"poll-create\">\r\n                                <h1>Create a poll: </h1>\r\n                                <form onSubmit={this.createPoll} id=\"poll-form\">\r\n                                    <input style={{ flex: 3 }} type=\"text\" id=\"form-title\" placeholder=\"Title\" />\r\n                                    <input style={{ flex: 3 }} type=\"text\" id=\"form-option1\" placeholder=\"Option 1\" />\r\n                                    <input style={{ flex: 3 }} type=\"text\" id=\"form-option2\" placeholder=\"Option 2\" />\r\n                                    <input style={{ flex: 1 }} type=\"submit\" id=\"form-submit\" placeholder=\"Submit\" />\r\n                                </form>\r\n                            </div>\r\n                        :\r\n                        <div className=\"login-statement\">\r\n                            <h1>Log in to vote and create polls</h1>\r\n                        </div>\r\n                    }\r\n                    <div className=\"polls\">\r\n                        {pollList.map(poll => {\r\n                            const userId = parseInt(localStorage.getItem('userId'))\r\n                            const user = localStorage.getItem('user')\r\n                            return (\r\n                                <div className={`poll ${poll[\"votes\"].includes(userId) ? \"voted\" : \"\"} ${poll[\"owner\"] === user ? \"owned\" : \"\"}`} id={pollList.indexOf(poll)}>\r\n                                    <h1 className=\"poll-title\">{poll[\"title\"]}</h1>\r\n                                    {poll[\"owner\"] === user &&\r\n                                        <img src={trash} alt=\"trash\" className=\"trash-icon\" onClick={this.deletePoll} />\r\n                                    }\r\n                                    <div className=\"poll-options\">\r\n                                        <button onClick={this.pollVote} name=\"option1total\" className={`poll-button ${poll[\"option1votes\"].includes(userId) ? \"active\" : \"\"}`} disabled={!localStorage.getItem('token') || poll[\"votes\"].includes(userId)}>{poll[\"option1\"]}</button>\r\n                                        <button onClick={this.pollVote} name=\"option2total\" className={`poll-button ${poll[\"option2votes\"].includes(userId) ? \"active\" : \"\"}`} disabled={!localStorage.getItem('token') || poll[\"votes\"].includes(userId)}>{poll[\"option2\"]}</button>\r\n                                    </div>\r\n                                    <div className=\"poll-results\">\r\n                                        <p>Total votes: </p>\r\n                                        <div className=\"votes-container\">\r\n                                            <div className=\"votes\">\r\n                                                <p>{poll[\"option1total\"]}</p>\r\n                                                <p>{poll[\"option2total\"]}</p>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                </div >\r\n            )\r\n        } catch {\r\n            return <h1>Loading...</h1>\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Polls;\r\n","import React from 'react'\r\nimport Navbar from '../components/Navbar'\r\nimport Polls from '../components/Polls'\r\n\r\nfunction Home() {\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            <Polls />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home","import React from 'react'\r\nimport Navbar from '../components/Navbar'\r\nimport { Redirect } from 'react-router-dom'\r\nimport jwt_decode from 'jwt-decode'\r\n\r\nclass Register extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            username: null,\r\n            password: null,\r\n            redirect: false,\r\n            error: false,\r\n        }\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault()\r\n        fetch('http://127.0.0.1:8000/api/users/', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n                \"username\": this.state.username,\r\n                \"password\": this.state.password,\r\n            })\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if (data.token) {\r\n                    localStorage.setItem('token', data.token)\r\n                    localStorage.setItem('user', jwt_decode(data.token)[\"username\"])\r\n                    fetch('http://127.0.0.1:8000/api/user_id/', {\r\n                        method: 'POST',\r\n                        headers: { 'Content-Type': 'application/json' },\r\n                        body: JSON.stringify({ \"username\": localStorage.getItem('user') })\r\n                    })\r\n                        .then(response => response.json())\r\n                        .then(data => localStorage.setItem('userId', data))\r\n                    this.setState({ redirect: true })\r\n                } else {\r\n                    this.setState({ error: true })\r\n                }\r\n            })\r\n    }\r\n\r\n    handleChange(e) {\r\n        e.preventDefault()\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.redirect) {\r\n            return <Redirect to='/' />\r\n        } else {\r\n            return (\r\n                <div>\r\n                    <Navbar />\r\n                    <div className=\"register-container\">\r\n                        <h1>REGISTER</h1>\r\n                        {this.state.error &&\r\n                            <h2 className=\"register-error\">Username already exists!</h2>\r\n                        }\r\n                        <div className=\"form-container\">\r\n                            <form onSubmit={this.handleSubmit} className=\"register-form\">\r\n                                <input type=\"text\" name=\"username\" onChange={this.handleChange} placeholder=\"Username\" />\r\n                                <input type=\"password\" name=\"password\" onChange={this.handleChange} placeholder=\"Password\" />\r\n                                <div className=\"register-form-submit\">\r\n                                    <input type=\"submit\" value=\"REGISTER\" />\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default Register","import React from 'react'\r\nimport Navbar from '../components/Navbar'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass Login extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            username: null,\r\n            password: null,\r\n            loggedin: false,\r\n            error: false,\r\n        }\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault()\r\n        fetch('http://127.0.0.1:8000/api/token-auth/', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n                \"username\": this.state.username,\r\n                \"password\": this.state.password,\r\n            })\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                try {\r\n                    if (data.user.username) {\r\n                        localStorage.setItem('token', data.token)\r\n                        localStorage.setItem('user', data.user.username)\r\n                        fetch('http://127.0.0.1:8000/api/user_id/', {\r\n                            method: 'POST',\r\n                            headers: { 'Content-Type': 'application/json' },\r\n                            body: JSON.stringify({ \"username\": localStorage.getItem('user') })\r\n                        })\r\n                            .then(response => response.json())\r\n                            .then(data => {\r\n                                localStorage.setItem('userId', data)\r\n                            })\r\n                        this.setState({ loggedin: true })\r\n                    }\r\n                } catch {\r\n                    this.setState({ error: true })\r\n                }\r\n            })\r\n    }\r\n\r\n    handleChange(e) {\r\n        e.preventDefault()\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.loggedin) {\r\n            return <Redirect to='/' />\r\n        } else {\r\n            return (\r\n                <div>\r\n                    <Navbar />\r\n                    <div className=\"register-container\">\r\n                        <h1>LOG IN</h1>\r\n                        {this.state.error &&\r\n                            <h2 className=\"register-error\">Username already exists!</h2>\r\n                        }\r\n                        <div className=\"form-container\">\r\n                            <form onSubmit={this.handleSubmit} className=\"register-form\">\r\n                                <input type=\"text\" name=\"username\" onChange={this.handleChange} placeholder=\"Username\" />\r\n                                <input type=\"password\" name=\"password\" onChange={this.handleChange} placeholder=\"Password\" />\r\n                                <div className=\"register-form-submit\">\r\n                                    <input type=\"submit\" value=\"LOG IN\" />\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default Login","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './css/polls.css'\nimport './css/navbar.css'\nimport './css/register.css'\nimport {\n  BrowserRouter,\n  Route,\n  Switch,\n  Redirect\n} from \"react-router-dom\"\nimport Home from './pages/home'\nimport Register from './pages/register'\nimport Login from './pages/login'\n\nconst loggedIn = localStorage.getItem('token') ? true : false\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/register\" component={Register}>\n          {loggedIn && <Redirect to=\"/\" />}\n        </Route>\n        <Route exact path=\"/login\" component={Login}>\n          {loggedIn && <Redirect to=\"/\" />}\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}